/*!
  * shared v10.0.5
  * (c) 2024 kazuya kawaguchi
  * Released under the MIT License.
  */const O=typeof window<"u",h=(t,e=!1)=>e?Symbol.for(t):Symbol(t),w=(t,e,o)=>y({l:t,k:e,s:o}),y=t=>JSON.stringify(t).replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029").replace(/\u0027/g,"\\u0027"),S=t=>typeof t=="number"&&isFinite(t),m=t=>a(t)==="[object Date]",A=t=>a(t)==="[object RegExp]",T=t=>b(t)&&Object.keys(t).length===0,_=Object.assign,d=Object.create,p=(t=null)=>d(t);let l;const E=()=>l||(l=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:p());function N(t){return t.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;")}const j=Object.prototype.hasOwnProperty;function P(t,e){return j.call(t,e)}const u=Array.isArray,f=t=>typeof t=="function",x=t=>typeof t=="string",D=t=>typeof t=="boolean",i=t=>t!==null&&typeof t=="object",F=t=>i(t)&&f(t.then)&&f(t.catch),g=Object.prototype.toString,a=t=>g.call(t),b=t=>a(t)==="[object Object]",J=t=>t==null?"":u(t)||b(t)&&t.toString===g?JSON.stringify(t,null,2):String(t);function q(t,e=""){return t.reduce((o,s,c)=>c===0?o+s:o+e+s,"")}function B(t,e){typeof console<"u"&&(console.warn("[intlify] "+t),e&&console.warn(e.stack))}const r=t=>!i(t)||u(t);function C(t,e){if(r(t)||r(e))throw new Error("Invalid value");const o=[{src:t,des:e}];for(;o.length;){const{src:s,des:c}=o.pop();Object.keys(s).forEach(n=>{n!=="__proto__"&&(i(s[n])&&!i(c[n])&&(c[n]=Array.isArray(s[n])?[]:p()),r(c[n])||r(s[n])?c[n]=s[n]:o.push({src:s[n],des:c[n]}))})}}export{x as a,u as b,b as c,p as d,_ as e,D as f,A as g,i as h,f as i,E as j,S as k,T as l,m,P as n,N as o,q as p,F as q,w as r,O as s,J as t,h as u,C as v,B as w};
